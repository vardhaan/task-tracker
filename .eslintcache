[{"/Users/hamsa/Desktop/task-2/src/index.js":"1","/Users/hamsa/Desktop/task-2/src/reportWebVitals.js":"2","/Users/hamsa/Desktop/task-2/src/App.js":"3","/Users/hamsa/Desktop/task-2/src/TaskList.js":"4","/Users/hamsa/Desktop/task-2/src/DataAccessor.js":"5","/Users/hamsa/Desktop/task-2/src/Task.js":"6","/Users/hamsa/Desktop/task-2/src/InputArea.js":"7","/Users/hamsa/Desktop/task-2/src/EditArea.js":"8"},{"size":500,"mtime":1611456266000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611456266000,"results":"11","hashOfConfig":"10"},{"size":131,"mtime":1611456861000,"results":"12","hashOfConfig":"10"},{"size":3660,"mtime":1611539493000,"results":"13","hashOfConfig":"10"},{"size":2627,"mtime":1611540123000,"results":"14","hashOfConfig":"10"},{"size":541,"mtime":1611539470000,"results":"15","hashOfConfig":"10"},{"size":1058,"mtime":1611537248000,"results":"16","hashOfConfig":"10"},{"size":1199,"mtime":1611537830000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2z0x7r",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/hamsa/Desktop/task-2/src/index.js",[],["40","41"],"/Users/hamsa/Desktop/task-2/src/reportWebVitals.js",[],"/Users/hamsa/Desktop/task-2/src/App.js",[],"/Users/hamsa/Desktop/task-2/src/TaskList.js",["42","43"],"import React, { Component } from 'react'\nimport DataAccessor from './DataAccessor.js'\nimport Task from './Task.js'\nimport InputArea from './InputArea.js'\nimport EditArea from './EditArea.js'\n\nclass TaskList extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.dataPopulator = new DataAccessor();\n\t\tvar initialChildren = this.dataPopulator.getChildren(0);\n\n\t\tthis.state = {\n\t\t\tcurrentParent: 0,\n\t\t\tcurrentChildren: initialChildren, //currentChildren should probably be a map, not an array\n\t\t\tcurrentlyBeingEdited: null,\n\t\t};\n\t\tthis.getChildren = this.getChildren.bind(this);\n\t\tthis.getParentSiblings = this.getParentSiblings.bind(this);\n\t\tthis.createNewTask = this.createNewTask.bind(this);\n\t\tthis.modifyTaskText = this.modifyTaskText.bind(this);\n\t\tthis.setTaskEditable = this.setTaskEditable.bind(this);\n\t\tthis.deleteTask = this.deleteTask.bind(this);\n\t\t\n\t\t\n\t}\n\n\tgetChildren(nodeID) {\n\t\tconsole.log(\"got here \", nodeID)\n\t\tvar children = this.dataPopulator.getChildren(nodeID);\n\t\tconsole.log(\"got here 2 \", children);\n\t\tconsole.log(\"hiiii\")\n\t\tthis.setState({\n\t\t\tcurrentParent: nodeID,\n\t\t\tcurrentChildren: children\n\t\t});\n\t}\n\n\tgetParentSiblings(parentID) {\n\t\tif(parentID === 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar parentOfParent = this.dataPopulator.getParent(parentID);\n\t\tvar siblingsOfParent = this.dataPopulator.getChildren(parentOfParent.id);\n\t\tthis.setState({\n\t\t\tcurrentParent: parentOfParent.id,\n\t\t\tcurrentChildren: siblingsOfParent\n\t\t})\n\n\t}\n\n\tcreateNewTask(text) {\n\t\tif(text !== null && text !== \"\") {\n\t\t\tvar newNode = this.dataPopulator.addNewNode(text, this.state.currentParent);\n\t\t\tthis.setState({\n\t\t\t\tcurrentChildren: [...this.state.currentChildren, newNode]\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n\tmodifyTaskText(newText, nodeID) {\n\t\t//could be some issues here due to pass by reference vs value? since\n\t\t//i might be directly trying to modify state objects\n\t\tconsole.log(\"reaching here?\")\n\t\tvar nodeToModify = null;\n\t\tvar childrenArray = this.state.currentChildren;\n\t\tvar index = 0;\n\t\tfor (let i=0; i<childrenArray.length;i++) {\n\t\t\tif (childrenArray[i].id === nodeID) {\n\t\t\t\tnodeToModify = childrenArray[i];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tif (nodeToModify == null) {\n\t\t\tconsole.log(\"surely not here?\");\n\t\t\treturn;\n\t\t}\n\t\tnodeToModify.text = newText;\n\t\tthis.dataPopulator.editNode(nodeToModify);\n\t\tconsole.log(this.childrenArray)\n\t\tthis.setState({\n\t\t\tcurrentChildren: childrenArray\n\t\t});\n\t\tthis.setTaskUnEditable(nodeID);\n\t}\n\n\tsetTaskUnEditable(taskID) {\n\t\tthis.setState({\n\t\t\tcurrentlyBeingEdited: null\n\t\t});\n\t}\n\n\tsetTaskEditable(taskID) {\n\t\tthis.setState({\n\t\t\tcurrentlyBeingEdited: taskID\n\t\t});\n\t}\n\n\tdeleteTask(taskID) {\n\t\t//for right now, just delete the node. Don't delete the subtree underneath\n\t\tconsole.log(\"where we at?\")\n\t\tthis.dataPopulator.deleteNode(taskID);\n\t\tthis.getChildren(this.state.currentParent);\n\n\t}\n\n\ttaskListMapper() {\n\t\tvar editingTaskID = this.state.currentlyBeingEdited;\n\t\treturn (\n\t\t\t<>\n\t\t\t{this.state.currentChildren.map((task) => {\n\t\t\t\tif (task.id === editingTaskID) {\n\t\t\t\t\treturn <EditArea submitHandler={this.modifyTaskText} initialData={task}/>\n\t\t\t\t} else {\n\t\t\t\t\treturn <Task subTaskHandler={this.getChildren} editHandler={this.setTaskEditable}\n\t\t\t\t\t\tdata={task} deleteHandler={this.deleteTask} />\n\t\t\t\t}\n\t\t\t})}\n\t\t\t</>\n\n\t\t)\n\t}\n\n\n\trender() {\n\n\t\tconsole.log(this.state.currentChildren);\n\t\tvar btn = null;\n\t\tif (this.state.currentParent !== 0) {\n\t\t\tbtn = <button onClick={() => this.getParentSiblings(this.state.currentParent)}>\n\t\t\t\t\tBack\n\t\t\t\t</button>\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{btn}\n\t\t\t\t<ul>\n\t\t\t\t\t{this.taskListMapper()}\n\t\t\t\t\t\n\t\t\t\t\t<InputArea submitHandler={this.createNewTask} />\n\n\t\t\t\t</ul>\n\t\t\t\t\n\n\t\t\t</>\n\n\t\t);\n\t}\n\n}\n\n\n\nexport default TaskList;","/Users/hamsa/Desktop/task-2/src/DataAccessor.js",[],"/Users/hamsa/Desktop/task-2/src/Task.js",["44","45"],"import React, { Component } from 'react'\n\n\nclass Task extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<li key={this.props.data.id} contentEditable=\"true\" \n\t\t\t\tonClick={() => this.props.editHandler(this.props.data.id)}> \n\t\t\t\t\t{this.props.data.text} \n\t\t\t\t</li>\n\t\t\t\t<span onClick={() => this.props.subTaskHandler(this.props.data.id)}> see sub-tasks </span>\n\t\t\t\t<span onClick={() => this.props.deleteHandler(this.props.data.id)}> delete task </span>\n\t\t\t</>\n\n\t\t)\n\t}\n\n}\n\n\nexport default Task;","/Users/hamsa/Desktop/task-2/src/InputArea.js",["46","47"],"import React, { Component } from 'react'\nimport './InputArea.css'\n\nclass InputArea extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tenteredText: \"\"\n\t\t}\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t}\n\n\tonKeyDown(e) {\n\t\tif (e.keyCode == 13 && e.shiftKey == false) {\n\t\t\te.preventDefault();\n\t\t\tconsole.log(\"default prevented\");\n\t\t\tthis.onSubmit(this.state.enteredText);\n\t\t}\n\t\treturn;\n\n\t}\n\n\tonChange(e) {\n\t\tconsole.log(\"huh? \", e.target.value);\n\t\tthis.setState({\n\t\t\tenteredText: e.target.value\n\t\t})\n\t}\n\n\tonSubmit(text) {\n\t\tthis.props.submitHandler(text);\n\t\tthis.setState({\n\t\t\tenteredText: \"\"\n\t\t})\n\t}\n\n\tonBlur(e) {\n\t\tthis.onSubmit(this.state.enteredText);\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.enteredText)\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<textarea onKeyDown={this.onKeyDown} onChange={this.onChange}\n\t\t\t\tplaceholder=\"Enter a new task\" onBlur={this.onBlur}\n\t\t\t\tautoFocus value={this.state.enteredText}/>\n\t\t\t</form>\n\t\t)\n\t}\n\n\n}\n\nexport default InputArea;",["48","49"],"/Users/hamsa/Desktop/task-2/src/EditArea.js",["50","51"],"import React, { Component } from 'react'\nimport './InputArea.css' //TODO: need to update this\n\nclass EditArea extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewText: this.props.initialData.text\n\t\t}\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t}\n\n\tonKeyDown(e) {\n\t\tif (e.keyCode == 13 && e.shiftKey == false) {\n\t\t\te.preventDefault();\n\t\t\tconsole.log(\"default prevented\");\n\t\t\tthis.onSubmit(this.state.newText);\n\t\t}\n\t\treturn;\n\n\t}\n\n\tonChange(e) {\n\t\tthis.setState({\n\t\t\tnewText: e.target.value\n\t\t});\n\t}\n\n\tonSubmit(text) {\n\t\tif (text === null || text === \"\") {\n\t\t\ttext = this.props.initialData.text;\n\t\t}\n\t\tthis.props.submitHandler(text, this.props.initialData.id);\n\t\tthis.setState({\n\t\t\tnewText: text\n\t\t})\n\n\t}\n\n\tonBlur(e) {\n\t\tthis.onSubmit(this.state.newText);\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.newText)\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<textarea onKeyDown={this.onKeyDown} onChange={this.onChange}\n\t\t\t\tplaceholder={this.state.newText} onBlur={this.onBlur}\n\t\t\t\tautoFocus value={this.state.newText}/>\n\t\t\t</form>\n\t\t)\n\t}\n\n\n}\n\nexport default EditArea;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":74,"column":5,"nodeType":"58","messageId":"59","endLine":74,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":6,"column":2,"nodeType":"63","messageId":"64","endLine":9,"endColumn":3},{"ruleId":"65","severity":1,"message":"66","line":17,"column":17,"nodeType":"67","messageId":"68","endLine":17,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":17,"column":37,"nodeType":"67","messageId":"68","endLine":17,"endColumn":39},{"ruleId":"52","replacedBy":"69"},{"ruleId":"54","replacedBy":"70"},{"ruleId":"65","severity":1,"message":"66","line":18,"column":17,"nodeType":"67","messageId":"68","endLine":18,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":18,"column":37,"nodeType":"67","messageId":"68","endLine":18,"endColumn":39},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["71"],["72"],"no-global-assign","no-unsafe-negation"]